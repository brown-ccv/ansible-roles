user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcpnopush     on;

    keepalive_timeout  65;

    #gzip  on;

{% if lets_encrypt is defined %}
    server {
        listen       80;
        server_name  {{ inventory_hostname }};

        # NOTE (BNR): Instead of using the conf.d files for different sites (or
        #             virtual hosts) we use location.d to house the different
        #             location blocks stored on our system. That way we can
        #             have ansible create templated snippets of the location
        #             blocks when deploying our docker containers.
        include /etc/nginx/location.d/*.conf;
    }
{% elif static_ssl is defined %}
    # generated 2020-03-02, Mozilla Guideline v5.4, nginx 1.17.7, OpenSSL 1.1.1d, modern configuration
    # https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=modern&openssl=1.1.1d&guideline=5.4
    server {
        listen 80 default_server;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;

        ssl_certificate /etc/pki/tls/certs/{{ ssl_certificate }};
        ssl_certificate_key /etc/pki/tls/private/{{ ssl_private_key }};
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/nginx/dhparam.pem
        ssl_dhparam /etc/nginx/dhparam.pem;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/pki/tls/certs/{{ ssl_ca_certificate }};

        # replace with the IP address of your resolver
        resolver 127.0.0.1;

        # NOTE (BNR): Instead of using the conf.d files for different sites (or
        #             virtual hosts) we use location.d to house the different
        #             location blocks stored on our system. That way we can
        #             have ansible create templated snippets of the location
        #             blocks when deploying our docker containers.
        include /etc/nginx/location.d/*.conf;
    }
{% endif %}
}
